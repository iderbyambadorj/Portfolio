setwd("~/Downloads/Projects/bnpl-industry-project-open-source-industry-project-15/notebooks")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Downloads/Projects/bnpl-industry-project-open-source-industry-project-15/notebooks") # set working directory here
library(ggplot2)
train = read.csv("data/curated/lm_train.csv")
library(ggplot2)
train = read.csv("../data/curated/lm_train.csv")
test = read.csv("../data/curated/lm_test.csv")
train[is.na(train)] = 0
test[is.na(test)] = 0
rev_model = lm(next_total_revenue~.-next_total_num_trans-next_total_num_consumer
-merchant_abn-year, data=train)
usr_model = lm(next_total_num_consumer~.-next_total_num_trans-next_total_revenue
-merchant_abn-year, data=train)
trans_model = lm(next_total_num_trans~.-next_total_num_consumer-next_total_revenue
-merchant_abn-year, data=train)
tasks = c("Revenue", "User count", "Transaction count")
# LM errors
lm_mae = c(mean(abs(rev_model$fitted.values - train$next_total_revenue)),
mean(abs(usr_model$fitted.values - train$next_total_num_consumer)),
mean(abs(trans_model$fitted.values - train$next_total_num_trans)))
# 1R errors
bench_mae = c(mean(abs(train$total_revenue - train$next_total_revenue)),
mean(abs(train$total_num_consumer - train$next_total_num_consumer)),
mean(abs(train$total_num_trans - train$next_total_num_trans)))
# Normalization values
means = c(mean(train$total_revenue), mean(train$total_num_consumer),
mean(train$total_num_trans))
# plot the results
tasks = c(tasks, tasks)
Model = c(rep("1R", 3), rep("LM", 3))
lm_mae = lm_mae / means
bench_mae = bench_mae / means
maes = c(bench_mae, lm_mae)
ans = data.frame(tasks = tasks, model=Model, maes=maes)
ggplot(ans, aes(fill=Model, y=maes, x=tasks)) +
geom_bar(position="dodge", stat="identity") +
xlab("Prediction Task") +
ylab("MAE") +
labs(title="MAE of Linear Regression and 1R models", fill="Model") +
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size=14),
axis.title = element_text(size=14))
ggsave("../plots/Linear_model_perf.png")
